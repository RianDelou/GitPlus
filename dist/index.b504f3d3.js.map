{"mappings":"AAAA,MAAM,QAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,WAAW;AACjB,MAAM,aAAa;AACnB,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAE9C,MAAM,iBAAiB;AACvB,MAAM,UAAU;IACd,0BAA0B;IAC1B,wBAAwB;IACxB,6BAA6B;AAC/B;AAEA,MAAM,cAAc;IAClB,GAAG,OAAO;IACV,gBAAgB;AAClB;AAGA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,aAAa,KAAK;IAClB,QAAQ,SAAS,CAAC,MAAM,MAAM,SAAS,IAAI;AAC/C;AAEA,MAAM,eAAe,OAAO,WAAW,cAAc,UAAU,cAAc;IACzE,MAAM,kBAAkB,MAAM,MAAM,CAAC,EAAE,eAAe,iBAAiB,EAAE,UAAU,CAAC,EAAE;QAClF,QAAQ;QACR,SAAS;YACL,GAAG,WAAW;QAClB;IACJ;IAEA,IAAI,gBAAgB,EAAE,EAAE;QACpB,MAAM,cAAc,MAAM,gBAAgB,IAAI;QAE9C,IAAI,YAAY,QAAQ,KAAK,cAAc,KAAK,EAAE;YAC9C,aAAa,OAAO,CAAC,eAAe;YACpC,aAAa,OAAO,CAAC,eAAe,YAAY,WAAW;YAC3D,aAAa,OAAO,CAAC,iBAAiB,YAAY,aAAa;YAC/D,aAAa,OAAO,CAAC,eAAe;YACpC,aAAa,OAAO,CAAC,eAAe,YAAY,WAAW,CAAC,GAAG;YAC/D,aAAa,OAAO,CAAC,iBAAiB,YAAY,aAAa,CAAC,GAAG;YACnE,aAAa,OAAO,CAAC,aAAa,YAAY,QAAQ;YACtD,aAAa,OAAO,CAAC,UAAU;YAC/B,aAAa,OAAO,CAAC,gBAAgB;YACrC,OAAO,QAAQ,CAAC,IAAI,GAAG;QAC3B,OACI,UAAU,WAAW,GAAG;IAGhC,OACI,UAAU,WAAW,GAAG,mCAAkC,MAAM,gBAAgB,IAAI;AAE5F;AAEA,YAAY,gBAAgB,CAAC,SAAS;IAElC,MAAM,YAAY;QACd,UAAU,MAAM,KAAK;QACrB,UAAU,SAAS,KAAK;IAC5B;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,UAAU;YACnC,QAAQ;YACR,SAAS;YACT,MAAM,KAAK,SAAS,CAAC;QACzB;QAEA,IAAI,SAAS,EAAE,EAAE;YACb,MAAM,eAAe,MAAM,SAAS,IAAI;YAExC,IAAI,CAAC,aAAa,OAAO,EAAE;gBACvB,aAAa,OAAO,CAAC,YAAY,aAAa,QAAQ;gBACtD,aAAa,OAAO,CAAC,UAAU,aAAa,QAAQ;gBACpD,aAAa,OAAO,CAAC,gBAAgB,aAAa,YAAY;gBAC9D,aAAa,OAAO,CAAC,YAAY,aAAa,IAAI,CAAC,GAAG;gBACtD,UAAU,WAAW,GAAG;gBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;YAC3B,OAAO,IAAI,aAAa,OAAO,EAAE;gBAC7B,IAAI,YAAY,aAAa,OAAO,CAAC,QAAQ;gBAC7C,aAAa,WAAW,aAAa,QAAQ,EAAE,aAAa,IAAI,CAAC,GAAG,EAAE,aAAa,YAAY,EAAE,aAAa,QAAQ;YAC1H;QAEJ,OACI,UAAU,WAAW,GAAG;IAEhC,EAAE,OAAO,OAAO;QACZ,UAAU,WAAW,GAAG;IAC5B;AACJ","sources":["back-end/userFetch.js"],"sourcesContent":["const email = document.getElementById(\"input-email\");\r\nconst password = document.getElementById(\"input-password\");\r\nconst buttonLogin = document.getElementById(\"btn-login\");\r\nconst failAlert = document.getElementById(\"alert\");\r\nconst loginUrl = \"https://parseapi.back4app.com/Login\";\r\nconst tokenAdmin = \"5ry%tL#PLJ7AYhf%kyss$B\";\r\nconst buttonAdmin = document.getElementById(\"btn-adm\");\r\nconst inputTokenVip = document.getElementById(\"input-token-vip\");\r\n\r\nconst parseServerUrl = \"https://parseapi.back4app.com/\"\r\nconst headers = {\r\n  \"X-Parse-Application-Id\": \"EtXU3jV6pXkDHC5aRDi2ewMJbq3giWgbfBSeIlNq\",\r\n  \"X-Parse-REST-API-Key\": \"4P3E1V7SmTX23TsXSEHyo8N7Q8aVgK9H47uGTWYr\",\r\n  \"X-Parse-Revocable-Session\": \"1\",\r\n};\r\n\r\nconst headersJson = {\r\n  ...headers,\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => { //Reset of all localStorage\r\n    localStorage.clear();\r\n    history.pushState(null, null, location.href);\r\n});\r\n \r\nconst loginUserVip = async (userVipId, mainUsername, mainIcon, sessionToken, baseUserId) => {\r\n    const userVipResponse = await fetch(`${parseServerUrl}/classes/UserVip/${userVipId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            ...headersJson,\r\n        }\r\n    });\r\n\r\n    if (userVipResponse.ok) {\r\n        const userVipData = await userVipResponse.json();\r\n\r\n        if (userVipData.tokenVip === inputTokenVip.value) {\r\n            localStorage.setItem(\"usernameOne\", mainUsername);\r\n            localStorage.setItem(\"usernameTwo\", userVipData.usernameTwo);\r\n            localStorage.setItem(\"usernameThree\", userVipData.usernameThree);\r\n            localStorage.setItem(\"iconUserOne\", mainIcon);\r\n            localStorage.setItem(\"iconUserTwo\", userVipData.iconUserTwo.url);\r\n            localStorage.setItem(\"iconUserThree\", userVipData.iconUserThree.url);\r\n            localStorage.setItem(\"userVipId\", userVipData.objectId);\r\n            localStorage.setItem(\"userId\", baseUserId);\r\n            localStorage.setItem(\"sessionToken\", sessionToken);\r\n            window.location.href = \"iconVips.html\";\r\n        } else {\r\n            failAlert.textContent = \"TOKEN INVÁLIDO\";\r\n        }\r\n\r\n    } else {\r\n        failAlert.textContent = \"falha no login do usuarioVIP: \"+ await userVipResponse.text();\r\n    }\r\n}\r\n\r\nbuttonLogin.addEventListener(\"click\", async () => {\r\n    \r\n    const loginData = {\r\n        username: email.value, \r\n        password: password.value\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(loginUrl, {\r\n            method: \"POST\",\r\n            headers: headersJson,\r\n            body: JSON.stringify(loginData)\r\n        });\r\n\r\n        if (response.ok) {\r\n            const responseData = await response.json();\r\n            \r\n            if (!responseData.UserVip) {\r\n                localStorage.setItem(\"username\", responseData.username);\r\n                localStorage.setItem(\"userId\", responseData.objectId);\r\n                localStorage.setItem(\"sessionToken\", responseData.sessionToken);\r\n                localStorage.setItem(\"iconUser\", responseData.icon.url);\r\n                failAlert.textContent = \"\";\r\n                window.location.href = \"icon.html\";\r\n            } else if (responseData.UserVip) {\r\n                let userVipId = responseData.UserVip.objectId;\r\n                loginUserVip(userVipId, responseData.username, responseData.icon.url, responseData.sessionToken, responseData.objectId);\r\n            }\r\n            \r\n        } else {\r\n            failAlert.textContent = \"falha no login: Essa conta não existe.\";\r\n        }\r\n    } catch (error) {\r\n        failAlert.textContent = error;\r\n    }\r\n});"],"names":[],"version":3,"file":"index.b504f3d3.js.map","sourceRoot":"/__parcel_source_root/"}