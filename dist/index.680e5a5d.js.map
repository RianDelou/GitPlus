{"mappings":"ACAA,MAAM,EAAQ,SAAS,cAAc,CAAC,eAChC,EAAW,SAAS,cAAc,CAAC,kBACnC,EAAc,SAAS,cAAc,CAAC,aACtC,EAAY,SAAS,cAAc,CAAC,SAGtB,SAAS,cAAc,CAAC,WAC5C,MAAM,EAAgB,SAAS,cAAc,CAAC,mBASxC,EAAc,CALlB,yBAA0B,2CAC1B,uBAAwB,2CACxB,4BAA6B,IAK7B,eAAgB,kBAClB,EAGA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,aAAa,KAAK,GAClB,QAAQ,SAAS,CAAC,KAAM,KAAM,SAAS,IAAI,CAC/C,GAEA,MAAM,EAAe,MAAO,EAAW,EAAc,EAAU,EAAc,KACzE,IAAM,EAAkB,MAAM,MAAM,kDAAqC,GAAW,CAAE,CAClF,OAAQ,MACR,QAAS,CACL,GAAG,CAAW,AAClB,CACJ,GAEA,GAAI,EAAgB,EAAE,CAAE,CACpB,IAAM,EAAc,MAAM,EAAgB,IAAI,EAE1C,CAAA,EAAY,QAAQ,GAAK,EAAc,KAAK,EAC5C,aAAa,OAAO,CAAC,cAAe,GACpC,aAAa,OAAO,CAAC,cAAe,EAAY,WAAW,EAC3D,aAAa,OAAO,CAAC,gBAAiB,EAAY,aAAa,EAC/D,aAAa,OAAO,CAAC,cAAe,GACpC,aAAa,OAAO,CAAC,cAAe,EAAY,WAAW,CAAC,GAAG,EAC/D,aAAa,OAAO,CAAC,gBAAiB,EAAY,aAAa,CAAC,GAAG,EACnE,aAAa,OAAO,CAAC,YAAa,EAAY,QAAQ,EACtD,aAAa,OAAO,CAAC,SAAU,GAC/B,aAAa,OAAO,CAAC,eAAgB,GACrC,OAAO,QAAQ,CAAC,IAAI,CAAG,iBAEvB,EAAU,WAAW,CAAG,gBAGhC,MACI,EAAU,WAAW,CAAG,iCAAkC,MAAM,EAAgB,IAAI,EAE5F,EAEA,EAAY,gBAAgB,CAAC,QAAS,UAElC,IAAM,EAAY,CACd,SAAU,EAAM,KAAK,CACrB,SAAU,EAAS,KAAK,AAC5B,EAEA,GAAI,CACA,IAAM,EAAW,MAAM,MA9Dd,sCA8D8B,CACnC,OAAQ,OACR,QAAS,EACT,KAAM,KAAK,SAAS,CAAC,EACzB,GAEA,GAAI,EAAS,EAAE,CAAE,CACb,IAAM,EAAe,MAAM,EAAS,IAAI,GAExC,GAAK,EAAa,OAAO,CAOlB,CAAA,GAAI,EAAa,OAAO,CAAE,CAC7B,IAAI,EAAY,EAAa,OAAO,CAAC,QAAQ,CAC7C,EAAa,EAAW,EAAa,QAAQ,CAAE,EAAa,IAAI,CAAC,GAAG,CAAE,EAAa,YAAY,CAAE,EAAa,QAAQ,CAC1H,CAAA,MATI,aAAa,OAAO,CAAC,WAAY,EAAa,QAAQ,EACtD,aAAa,OAAO,CAAC,SAAU,EAAa,QAAQ,EACpD,aAAa,OAAO,CAAC,eAAgB,EAAa,YAAY,EAC9D,aAAa,OAAO,CAAC,WAAY,EAAa,IAAI,CAAC,GAAG,EACtD,EAAU,WAAW,CAAG,GACxB,OAAO,QAAQ,CAAC,IAAI,CAAG,WAM/B,MACI,EAAU,WAAW,CAAG,wCAEhC,CAAE,MAAO,EAAO,CACZ,EAAU,WAAW,CAAG,CAC5B,CACJ","sources":["<anon>","back-end/userFetch.js"],"sourcesContent":["const email = document.getElementById(\"input-email\");\nconst password = document.getElementById(\"input-password\");\nconst buttonLogin = document.getElementById(\"btn-login\");\nconst failAlert = document.getElementById(\"alert\");\nconst loginUrl = \"https://parseapi.back4app.com/Login\";\nconst tokenAdmin = \"5ry%tL#PLJ7AYhf%kyss$B\";\nconst buttonAdmin = document.getElementById(\"btn-adm\");\nconst inputTokenVip = document.getElementById(\"input-token-vip\");\nconst parseServerUrl = \"https://parseapi.back4app.com/\";\nconst headers = {\n    \"X-Parse-Application-Id\": \"EtXU3jV6pXkDHC5aRDi2ewMJbq3giWgbfBSeIlNq\",\n    \"X-Parse-REST-API-Key\": \"4P3E1V7SmTX23TsXSEHyo8N7Q8aVgK9H47uGTWYr\",\n    \"X-Parse-Revocable-Session\": \"1\"\n};\nconst headersJson = {\n    ...headers,\n    \"Content-Type\": \"application/json\"\n};\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    localStorage.clear();\n    history.pushState(null, null, location.href);\n});\nconst loginUserVip = async (userVipId, mainUsername, mainIcon, sessionToken, baseUserId)=>{\n    const userVipResponse = await fetch(`${parseServerUrl}/classes/UserVip/${userVipId}`, {\n        method: \"GET\",\n        headers: {\n            ...headersJson\n        }\n    });\n    if (userVipResponse.ok) {\n        const userVipData = await userVipResponse.json();\n        if (userVipData.tokenVip === inputTokenVip.value) {\n            localStorage.setItem(\"usernameOne\", mainUsername);\n            localStorage.setItem(\"usernameTwo\", userVipData.usernameTwo);\n            localStorage.setItem(\"usernameThree\", userVipData.usernameThree);\n            localStorage.setItem(\"iconUserOne\", mainIcon);\n            localStorage.setItem(\"iconUserTwo\", userVipData.iconUserTwo.url);\n            localStorage.setItem(\"iconUserThree\", userVipData.iconUserThree.url);\n            localStorage.setItem(\"userVipId\", userVipData.objectId);\n            localStorage.setItem(\"userId\", baseUserId);\n            localStorage.setItem(\"sessionToken\", sessionToken);\n            window.location.href = \"iconVips.html\";\n        } else failAlert.textContent = \"TOKEN INV\\xc1LIDO\";\n    } else failAlert.textContent = \"falha no login do usuarioVIP: \" + await userVipResponse.text();\n};\nbuttonLogin.addEventListener(\"click\", async ()=>{\n    const loginData = {\n        username: email.value,\n        password: password.value\n    };\n    try {\n        const response = await fetch(loginUrl, {\n            method: \"POST\",\n            headers: headersJson,\n            body: JSON.stringify(loginData)\n        });\n        if (response.ok) {\n            const responseData = await response.json();\n            if (!responseData.UserVip) {\n                localStorage.setItem(\"username\", responseData.username);\n                localStorage.setItem(\"userId\", responseData.objectId);\n                localStorage.setItem(\"sessionToken\", responseData.sessionToken);\n                localStorage.setItem(\"iconUser\", responseData.icon.url);\n                failAlert.textContent = \"\";\n                window.location.href = \"icon.html\";\n            } else if (responseData.UserVip) {\n                let userVipId = responseData.UserVip.objectId;\n                loginUserVip(userVipId, responseData.username, responseData.icon.url, responseData.sessionToken, responseData.objectId);\n            }\n        } else failAlert.textContent = \"falha no login: Essa conta n\\xe3o existe.\";\n    } catch (error) {\n        failAlert.textContent = error;\n    }\n});\n\n//# sourceMappingURL=index.680e5a5d.js.map\n","const email = document.getElementById(\"input-email\");\r\nconst password = document.getElementById(\"input-password\");\r\nconst buttonLogin = document.getElementById(\"btn-login\");\r\nconst failAlert = document.getElementById(\"alert\");\r\nconst loginUrl = \"https://parseapi.back4app.com/Login\";\r\nconst tokenAdmin = \"5ry%tL#PLJ7AYhf%kyss$B\";\r\nconst buttonAdmin = document.getElementById(\"btn-adm\");\r\nconst inputTokenVip = document.getElementById(\"input-token-vip\");\r\n\r\nconst parseServerUrl = \"https://parseapi.back4app.com/\"\r\nconst headers = {\r\n  \"X-Parse-Application-Id\": \"EtXU3jV6pXkDHC5aRDi2ewMJbq3giWgbfBSeIlNq\",\r\n  \"X-Parse-REST-API-Key\": \"4P3E1V7SmTX23TsXSEHyo8N7Q8aVgK9H47uGTWYr\",\r\n  \"X-Parse-Revocable-Session\": \"1\",\r\n};\r\n\r\nconst headersJson = {\r\n  ...headers,\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => { //Reset of all localStorage\r\n    localStorage.clear();\r\n    history.pushState(null, null, location.href);\r\n});\r\n \r\nconst loginUserVip = async (userVipId, mainUsername, mainIcon, sessionToken, baseUserId) => {\r\n    const userVipResponse = await fetch(`${parseServerUrl}/classes/UserVip/${userVipId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            ...headersJson,\r\n        }\r\n    });\r\n\r\n    if (userVipResponse.ok) {\r\n        const userVipData = await userVipResponse.json();\r\n\r\n        if (userVipData.tokenVip === inputTokenVip.value) {\r\n            localStorage.setItem(\"usernameOne\", mainUsername);\r\n            localStorage.setItem(\"usernameTwo\", userVipData.usernameTwo);\r\n            localStorage.setItem(\"usernameThree\", userVipData.usernameThree);\r\n            localStorage.setItem(\"iconUserOne\", mainIcon);\r\n            localStorage.setItem(\"iconUserTwo\", userVipData.iconUserTwo.url);\r\n            localStorage.setItem(\"iconUserThree\", userVipData.iconUserThree.url);\r\n            localStorage.setItem(\"userVipId\", userVipData.objectId);\r\n            localStorage.setItem(\"userId\", baseUserId);\r\n            localStorage.setItem(\"sessionToken\", sessionToken);\r\n            window.location.href = \"iconVips.html\";\r\n        } else {\r\n            failAlert.textContent = \"TOKEN INVÁLIDO\";\r\n        }\r\n\r\n    } else {\r\n        failAlert.textContent = \"falha no login do usuarioVIP: \"+ await userVipResponse.text();\r\n    }\r\n}\r\n\r\nbuttonLogin.addEventListener(\"click\", async () => {\r\n    \r\n    const loginData = {\r\n        username: email.value, \r\n        password: password.value\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(loginUrl, {\r\n            method: \"POST\",\r\n            headers: headersJson,\r\n            body: JSON.stringify(loginData)\r\n        });\r\n\r\n        if (response.ok) {\r\n            const responseData = await response.json();\r\n            \r\n            if (!responseData.UserVip) {\r\n                localStorage.setItem(\"username\", responseData.username);\r\n                localStorage.setItem(\"userId\", responseData.objectId);\r\n                localStorage.setItem(\"sessionToken\", responseData.sessionToken);\r\n                localStorage.setItem(\"iconUser\", responseData.icon.url);\r\n                failAlert.textContent = \"\";\r\n                window.location.href = \"icon.html\";\r\n            } else if (responseData.UserVip) {\r\n                let userVipId = responseData.UserVip.objectId;\r\n                loginUserVip(userVipId, responseData.username, responseData.icon.url, responseData.sessionToken, responseData.objectId);\r\n            }\r\n            \r\n        } else {\r\n            failAlert.textContent = \"falha no login: Essa conta não existe.\";\r\n        }\r\n    } catch (error) {\r\n        failAlert.textContent = error;\r\n    }\r\n});"],"names":["email","document","getElementById","password","buttonLogin","failAlert","inputTokenVip","headersJson","addEventListener","localStorage","clear","history","pushState","location","href","loginUserVip","userVipId","mainUsername","mainIcon","sessionToken","baseUserId","userVipResponse","fetch","method","headers","ok","userVipData","json","tokenVip","value","setItem","usernameTwo","usernameThree","iconUserTwo","url","iconUserThree","objectId","window","textContent","text","loginData","username","response","body","JSON","stringify","responseData","UserVip","icon","error"],"version":3,"file":"index.680e5a5d.js.map"}