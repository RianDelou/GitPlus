{"mappings":"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","sources":["back-end/forClientVip/post.js"],"sourcesContent":["const userName1 = document.getElementById(\"input-username1\");\r\nconst userName2 = document.getElementById(\"input-username2\");\r\nconst userName3 = document.getElementById(\"input-username3\");\r\nconst email = document.getElementById(\"input-email\");\r\nconst password = document.getElementById(\"input-password\");\r\nconst buttonCreateAccount = document.getElementById(\"btn-criar-conta\");\r\nconst failAlert = document.getElementById(\"alert\");\r\nconst urlUsersVip = \"https://parseapi.back4app.com/classes/UserVip\";\r\nconst urlAllUsers = \"https://parseapi.back4app.com/classes/_User\";\r\nconst headers = {\r\n  \"X-Parse-Application-Id\": \"EtXU3jV6pXkDHC5aRDi2ewMJbq3giWgbfBSeIlNq\",\r\n  \"X-Parse-REST-API-Key\": \"4P3E1V7SmTX23TsXSEHyo8N7Q8aVgK9H47uGTWYr\",\r\n  \"X-Parse-Revocable-Session\": \"1\",\r\n};\r\nconst headersJson = {\r\n  ...headers,\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst checkExists = async (field, value) => {\r\n  const response = await fetch(`${urlAllUsers}?where={\"${field}\":\"${value}\"}`, {\r\n    method: \"GET\",\r\n    headers: headersJson,\r\n  });\r\n\r\n  if (response.ok) {\r\n    const data = await response.json();\r\n    if (data.results.length > 0) return true;\r\n  } else {\r\n    const errorData = await response.json();\r\n    throw new Error(`Erro ao verificar ${field}: ${errorData.error}`);\r\n  }\r\n\r\n  const responseVip = await fetch(`${urlUsersVip}?where={\"${field}\":\"${value}\"}`, {\r\n    method: \"GET\",\r\n    headers: headersJson,\r\n  });\r\n\r\n  if (responseVip.ok) {\r\n    const data = await responseVip.json();\r\n    return data.results.length > 0;\r\n  } else {\r\n    const errorData = await responseVip.json();\r\n    throw new Error(`Erro ao verificar ${field} (VIP): ${errorData.error}`);\r\n  }\r\n};\r\n\r\n// CHECAGEM ANTIGA - SALVANDO PRA NÃO PERDER LÓGICA\r\n// const checkUserExists = async (username, email) => {\r\n//   const queryUrl = `${urlallUsers}?where=${encodeURIComponent(JSON.stringify({\r\n//     $or: [\r\n//       { username: username },\r\n//       { email: email }\r\n//     ]\r\n//   }))}`;\r\n  \r\n//   const response = await fetch(queryUrl, {\r\n//     method: \"GET\",\r\n//     headers: headersJson,\r\n//   });\r\n\r\n//   const data = await response.json();\r\n//   return data.results.length > 0;\r\n// };\r\n\r\nconst createUserVip = async () => {\r\n\r\n    let token = generateToken();\r\n     \r\n    const userData = {\r\n      usernameTwo: userName2.value,\r\n      usernameThree: userName3.value,\r\n      tokenVip: token\r\n    };\r\n\r\n    const response = await fetch(urlUsersVip, {\r\n      method: \"POST\",\r\n      headers: headersJson,\r\n      body: JSON.stringify(userData),\r\n    });\r\n  \r\n    if (response.ok) {\r\n      const pickId = await response.json();\r\n      restrictInformation(pickId.objectId, token); // putting the information in user place\r\n    } else {\r\n      const errorData = await response.json();\r\n      failAlert.textContent = `Erro ao criar usuário vip: ${errorData.error}`;\r\n    }\r\n  };\r\n\r\n  const restrictInformation = async (userVipId, token) => {\r\n  const userData = {\r\n    username: userName1.value,\r\n    email: email.value,\r\n    password: password.value,\r\n    UserVip: {\r\n        \"__type\": \"Pointer\",\r\n        \"className\": \"UserVip\",\r\n        \"objectId\": userVipId\r\n      },\r\n  };\r\n\r\n  const response = await fetch(urlAllUsers, {\r\n    method: \"POST\",\r\n    headers: headersJson,\r\n    body: JSON.stringify(userData),\r\n  });\r\n\r\n  if (response.ok) {\r\n    const h3 = document.getElementById('h3-token');\r\n    const p = document.getElementById('token');\r\n    h3.innerHTML = \"Token vip (salve ele em algum lugar)\"\r\n    p.innerHTML = token;\r\n    failAlert.textContent = \"\";\r\n    return await response.json();\r\n  } else {\r\n    const errorData = await response.json();\r\n    failAlert.textContent = `Erro ao criar usuário vip: ${errorData.error}`;\r\n  }\r\n};\r\n\r\nbuttonCreateAccount.addEventListener(\"click\", async () => {\r\n  try {\r\n    if (!/^[a-zA-Z]+$/.test(userName1.value) && !/^[a-zA-Z]+$/.test(userName2.value) && !/^[a-zA-Z]+$/.test(userName1.value)) {\r\n      throw new Error(\"O nome de usuário é composto apenas por letras.\");\r\n    } else if (userName1.value === \"\" || userName2.value == \"\" ||  userName2.value == \"\" || email.value === \"\" || password.value === \"\") {\r\n      throw new Error(\"Preencha os campos restantes.\");\r\n    } else if (userName1.value.length < 3) {\r\n      throw new Error(\"O nome de usuário deve ter pelo menos 3 caracteres.\");\r\n    } else if (password.value.length < 5) {\r\n      throw new Error(\"A senha deve ter no mínimo 5 caracteres.\");\r\n    }\r\n\r\n    // CHECAGEM ANTIGA - SALVANDO PRA NÃO PERDER LÓGICA\r\n    // const userExists = await checkUserExists(userName1.value, email.value);\r\n    // if (userExists) {\r\n    //   throw new Error(\"Nome de usuário ou email já existente.\");\r\n    // }\r\n    \r\n    const usernameExists = await checkExists(\"username\", userName1.value);\r\n    if (usernameExists) {\r\n      throw new Error(\"Usuário já existente, mude o nome de usuário.\");\r\n    }\r\n\r\n    const useremailExists = await checkExists(\"email\", email.value);\r\n    if (useremailExists) {\r\n      throw new Error(\"Usuário já existente, mude o email de usuário.\");\r\n    }\r\n\r\n    await createUserVip();\r\n  } catch (error) {\r\n    failAlert.textContent = error.message;\r\n  }\r\n});\r\n\r\nfunction generateToken() {\r\n    let chars =\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    let tokenNumber = \"\";\r\n    for (let i = 0; i < 20; i++) {\r\n      tokenNumber += chars[Math.floor(Math.random() * chars.length)];\r\n    }\r\n    return tokenNumber;\r\n}  "],"names":[],"version":3,"file":"loginVip.ffc85c32.js.map","sourceRoot":"/__parcel_source_root/"}